{"version":3,"sources":["component/AddIdea.js","firebase.js","component/Add.js","App.js","serviceWorker.js","index.js"],"names":["AddIdea","props","initialFieldValies","id","uuid","time","rating","category","shortDescription","longDescription","expectations","useState","values","setValues","useEffect","currentId","ideasObject","handleOnChange","e","target","name","value","onSubmit","preventDefault","addIdeaOrEdit","className","style","float","onChange","type","min","max","selected","marginLeft","rows","fireDb","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","Add","setIdeasObject","setCurrentId","firebaseDb","child","on","snapshot","val","Fragment","obj","push","err","console","log","set","scope","Object","keys","map","key","onClick","window","confirm","remove","App","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.30a43076.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\nconst AddIdea = (props) => {\r\n  const initialFieldValies = {\r\n    id: uuid(),\r\n    time: \"\",\r\n    rating: \"\",\r\n    category: \"\",\r\n    shortDescription: \"\",\r\n    longDescription: \"\",\r\n    expectations: \"\",\r\n  };\r\n\r\n  var [values, setValues] = useState(initialFieldValies);\r\n\r\n  useEffect(() => {\r\n    if (props.currentId == \"\")\r\n      setValues({\r\n        ...initialFieldValies,\r\n      });\r\n    else\r\n      setValues({\r\n        ...props.ideasObject[props.currentId],\r\n      });\r\n  }, [props.currentId, props.ideasObject]);\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addIdeaOrEdit(values);\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    var { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleOnSubmit}>\r\n      <div className=\"form-group row \">\r\n        <div className=\"col-3\">\r\n          <div className=\"form-group \">\r\n            <label style={{ float: \"left\" }}>Date/Time</label>\r\n            <input\r\n              value={values.time}\r\n              onChange={handleOnChange}\r\n              name=\"time\"\r\n              type=\"datetime-local\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label style={{ float: \"left\" }}>Reiting 1-10</label>\r\n            <input\r\n              value={values.rating}\r\n              onChange={handleOnChange}\r\n              name=\"rating\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label style={{ float: \"left\" }}>Category</label>\r\n            <select\r\n              className=\"form-control custom-select\"\r\n              value={values.category}\r\n              onChange={handleOnChange}\r\n              name=\"category\"\r\n              type=\"text\"\r\n            >\r\n              <option selected>Open this select menu</option>\r\n              <option>Lični život</option>\r\n              <option>Posao</option>\r\n              <option>Obrazovanje</option>\r\n              <option>Zabava</option>\r\n              <option>Putovanje</option>\r\n              <option>Ostalo</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"row\">\r\n            <input\r\n              type=\"submit\"\r\n              value={props.currentId == \"\" ? \"Add Idea\" : \"Update\"}\r\n              style={{ marginLeft: \"15px\" }}\r\n              className=\"btn btn-success\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group col-3\">\r\n          <label style={{ float: \"left\" }}>Short Description</label>\r\n          <textarea\r\n            name=\"shortDescription\"\r\n            value={values.shortDescription}\r\n            onChange={handleOnChange}\r\n            className=\"form-control\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"form-group col-3\">\r\n          <label style={{ float: \"left\" }}>Long Description</label>\r\n          <textarea\r\n            name=\"longDescription\"\r\n            value={values.longDescription}\r\n            onChange={handleOnChange}\r\n            className=\"form-control\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"form-group col-3\">\r\n          <label style={{ float: \"left\" }}>Expectations</label>\r\n          <textarea\r\n            name=\"expectations\"\r\n            value={values.expectations}\r\n            onChange={handleOnChange}\r\n            className=\"form-control\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddIdea;\r\n","import * as firebase from \"firebase\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCCWEE_0uZpSM3Z8C8AxFg0WC0fNeNuN5Y\",\r\n  authDomain: \"dex2-acae9.firebaseapp.com\",\r\n  databaseURL: \"https://dex2-acae9.firebaseio.com\",\r\n  projectId: \"dex2-acae9\",\r\n  storageBucket: \"dex2-acae9.appspot.com\",\r\n  messagingSenderId: \"897694745814\",\r\n  appId: \"1:897694745814:web:83ad19158caf698569b577\",\r\n};\r\n// Initialize Firebase\r\nvar fireDb = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fireDb.database().ref();\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AddIdea from \"./AddIdea\";\r\nimport firebaseDb from \"../firebase\";\r\n\r\nconst Add = () => {\r\n  var [ideasObject, setIdeasObject] = useState({});\r\n  var [currentId, setCurrentId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    firebaseDb.child(\"ideas\").on(\"value\", (snapshot) => {\r\n      if (snapshot.val() != null)\r\n        setIdeasObject({\r\n          ...snapshot.val(),\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  const addIdeaOrEdit = (obj) => {\r\n    if (currentId == \"\")\r\n      firebaseDb.child(\"ideas\").push(obj, (err) => {\r\n        if (err) console.log(err);\r\n        else setCurrentId(\"\");\r\n      });\r\n    else\r\n      firebaseDb.child(`ideas/${currentId}`).set(obj, (err) => {\r\n        if (err) console.log(err);\r\n        else setCurrentId(\"\");\r\n      });\r\n  };\r\n\r\n  const onDelete = (key) => {\r\n    if (window.confirm(\"Are you sure you want to delete this record\")) {\r\n      firebaseDb.child(`ideas/${key}`).remove((err) => {\r\n        if (err) console.log(err);\r\n        else setCurrentId(\"\");\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"jumbotron jumbotron-fluid\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4\">Idea notes</h1>\r\n        </div>\r\n      </div>\r\n      <AddIdea {...{ addIdeaOrEdit, currentId, ideasObject }} />\r\n      <div>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Id</th>\r\n              <th scope=\"col\">Date/Time</th>\r\n              <th scope=\"col\">Reiting</th>\r\n              <th scope=\"col\">Category</th>\r\n              <th scope=\"col\">Short Description</th>\r\n              <th scope=\"col\">Long Description</th>\r\n              <th scope=\"col\">Expectations</th>\r\n              <th scope=\"col\">Update</th>\r\n              <th scope=\"col\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.keys(ideasObject).map((id) => {\r\n              return (\r\n                <tr key={id}>\r\n                  <td>{ideasObject[id].id}</td>\r\n                  <td>{ideasObject[id].time}</td>\r\n                  <td>{ideasObject[id].rating}</td>\r\n                  <td>{ideasObject[id].category}</td>\r\n                  <td>{ideasObject[id].shortDescription}</td>\r\n                  <td>{ideasObject[id].longDescription}</td>\r\n                  <td>{ideasObject[id].expectations}</td>\r\n                  <td>\r\n                    <a\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => setCurrentId(id)}\r\n                    >\r\n                      Update\r\n                    </a>\r\n                  </td>\r\n                  <td>\r\n                    <a className=\"btn btn-danger\" onClick={() => onDelete(id)}>\r\n                      Delete{\" \"}\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","import React, { Component, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Add from \"./component/Add\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Add />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}